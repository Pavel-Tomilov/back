const express = require('express');
const cors = require('cors');
const axios = require('axios'); // –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ fetch
require('dotenv').config();


const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors()); // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–∞
app.use(express.json()); // –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (—Ö—Ä–∞–Ω–∏—Ç—Å—è –¢–û–õ–¨–ö–û –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
const BOT_TOKEN = process.env.BOT_TOKEN;
const CHAT_ID = process.env.CHAT_ID;

// –†–æ—É—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
app.post('/api/send-message', async (req, res) => {
    try {
        const { name, email, message } = req.body;

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        const text = `üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\nüë§ –ò–º—è: ${name}\nüìß Email: ${email}\nüìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        const response = await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            chat_id: CHAT_ID,
            text: text,
            parse_mode: "Markdown"
        });

        res.status(200).json({ success: true });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        res.status(500).json({ success: false, error: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏" });
    }
});

app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});